{"version":3,"sources":["components/App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","store/index.js","index.js"],"names":["App","counter","useSelector","state","isLogged","dispatch","useDispatch","onClick","number","console","log","type","payload","action","reducer","combineReducers","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAqBeA,MAff,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACtCC,EAAWC,cACjB,OACE,gCACI,4CAAeL,KACf,wBAAQM,QAAS,kBAAMF,GCbLG,EDawB,ECZ9CC,QAAQC,IAAI,UACL,CACLC,KAAM,YACNC,QAASJ,KAJU,IAACA,GDalB,uBACA,wBAAQD,QAAS,kBAAMF,ECLpB,CACHM,KAAM,eDIN,wBACEP,GAAY,wBAAQG,QAAS,kBAAMF,ECAlC,CACHM,KAAM,aDDQ,uBACbP,GAAY,sD,OEJNH,EAZC,WAAsB,IAArBE,EAAoB,uDAAd,EAAGU,EAAW,uCAEjC,OADFJ,QAAQC,IAAI,WACHG,EAAOF,MACZ,IAAK,YACH,OAAOR,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,ICCAC,EATE,WAA2B,IAA1BD,EAAyB,wDAAXU,EAAW,uCACvC,OAAOA,EAAOF,MACV,IAAK,UACD,OAAQR,EACZ,QACI,OAAOA,ICIJW,EALCC,YAAgB,CAC5Bd,QAASA,EACTG,SAAUA,ICHRY,EAAQC,YAAYC,EAAUC,OAAOC,8BAAgCD,OAAOC,gCAClFX,QAAQC,IAAI,SACGM,QCEfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.e77b90df.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment } from '../actions';\nimport { decrement, signin } from '../actions';\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n  return (\n    <div>\n        <h4> Counter: {counter}</h4>\n        <button onClick={() => dispatch(increment(5))}>Increment</button>\n        <button onClick={() => dispatch(decrement())}>Decrement</button>\n        {!isLogged && <button onClick={() => dispatch(signin())}>Click me!</button>}\n        {isLogged && <span>Button clicked</span>}\n    </div>\n  );\n}\n\nexport default App","export const increment = (number) => {\r\n    console.log(\"action\")\r\n    return {\r\n      type: 'INCREMENT', \r\n      payload: number\r\n    }\r\n}\r\n  \r\nexport const decrement = () => {\r\n    return {\r\n        type: 'DECREMENT'\r\n    }\r\n}\r\n\r\nexport const signin = () => {\r\n    return {\r\n        type: 'SIGN-IN'\r\n    }\r\n}","const counter = (state=0, action) => {\r\n  console.log(\"reducer\")\r\n    switch(action.type) {\r\n      case 'INCREMENT':\r\n        return state + 1;\r\n      case 'DECREMENT':\r\n        return state - 1;\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default counter;","const isLogged = (state= false, action) => {\r\n    switch(action.type) {\r\n        case 'SIGN-IN':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isLogged;","import {combineReducers} from 'redux';\r\nimport counter from './counter';\r\nimport isLogged from './isLogged';\r\n\r\nconst reducer = combineReducers({\r\n    counter: counter,\r\n    isLogged: isLogged\r\n})\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducers from '../reducers'\r\n\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nconsole.log(\"store\")\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(  \n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}